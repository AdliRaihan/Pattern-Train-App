//
//  HomeInteractor.swift
//  VIP Pattern Training
//
//  Created by Adli Raihan on 02/05/19.
//  Copyright (c) 2019 Adli Raihan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic
{
    func doSomething    ( request: Home.Profile.Request )
    func doLogin        ( request: Home.login.Request)
}

protocol HomeDataStore
{
    var name : String { get set }
    var homeAPI: Home.Profile.Response { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore
{
    
    
    var homeAPI: Home.Profile.Response = Home.Profile.Response()
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    var name: String = ""
  
  // MARK: Do something
  func doSomething(request: Home.Profile.Request)
  {
    worker = HomeWorker()
    worker?.testAPI(request: request, completion: {
        (result,condition) in
        
        
        
    })
    
  }
    
    
    // MARK: Login Function -> buat login aja
    func doLogin(request: Home.login.Request) {
        worker = HomeWorker()
        
        worker?.homeUserLoginWorker(request: request, completion: { (result, condition) in
            
            if let result = profileMapper(JSON: result!) {
                
                if condition
                {
                    
                    // * Initialize WRSettings
                    UserSettings.standard.userName = result.information!.username!
                    UserSettings.standard.userEmail = result.information!.email!
                    UserSettings.standard.userLogged = true
                    
                    // * Route To Settings if login success
                    self.presenter?.presentRouting()
                }
            }
        })
    }
    
}
