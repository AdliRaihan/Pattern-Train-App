//
//  HomeInteractor.swift
//  VIP Pattern Training
//
//  Created by Adli Raihan on 02/05/19.
//  Copyright (c) 2019 Adli Raihan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic
{
    func doSomething    ( request: Home.Profile.Request )
}

protocol HomeDataStore
{
    var name : String { get set }
    var homeAPI: Home.Profile.Response { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore
{
    
    var homeAPI: Home.Profile.Response = Home.Profile.Response()
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    var name: String = ""
  
  // MARK: Do something
  func doSomething(request: Home.Profile.Request)
  {
    worker = HomeWorker()
    worker?.testAPI(request: request, completion: {
        (result,condition) in
        
        if let result = result as? profileMapper
        {
            let response = Home.Profile.Response(
                username: result.information!.username,
                email: result.information!.email,
                userId: result.information!.userId)
            
            if condition
            {
                print ( "Condition Passed!")
                self.presenter?.presentSomething(response: response)
            }
        }
        
        
    })
    
  }
    
}
